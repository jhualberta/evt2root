//
// File generated by /afs/crc.nd.edu/user/n/nsl/nuclear/x86_64_linux/install/root.5.30/bin/rootcint at Tue Apr  9 12:55:42 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MSUEventDictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MSUEventDictionary.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void msuEventData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_msuEventData(void *p = 0);
   static void *newArray_msuEventData(Long_t size, void *p);
   static void delete_msuEventData(void *p);
   static void deleteArray_msuEventData(void *p);
   static void destruct_msuEventData(void *p);
   static void streamer_msuEventData(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::msuEventData*)
   {
      ::msuEventData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::msuEventData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("msuEventData", ::msuEventData::Class_Version(), "/afs/crc.nd.edu/user/s/spectro/evt2root/MSUEvent/msuEventData.h", 10,
                  typeid(::msuEventData), DefineBehavior(ptr, ptr),
                  &::msuEventData::Dictionary, isa_proxy, 0,
                  sizeof(::msuEventData) );
      instance.SetNew(&new_msuEventData);
      instance.SetNewArray(&newArray_msuEventData);
      instance.SetDelete(&delete_msuEventData);
      instance.SetDeleteArray(&deleteArray_msuEventData);
      instance.SetDestructor(&destruct_msuEventData);
      instance.SetStreamerFunc(&streamer_msuEventData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::msuEventData*)
   {
      return GenerateInitInstanceLocal((::msuEventData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::msuEventData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void msuRingScalerData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_msuRingScalerData(void *p = 0);
   static void *newArray_msuRingScalerData(Long_t size, void *p);
   static void delete_msuRingScalerData(void *p);
   static void deleteArray_msuRingScalerData(void *p);
   static void destruct_msuRingScalerData(void *p);
   static void streamer_msuRingScalerData(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::msuRingScalerData*)
   {
      ::msuRingScalerData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::msuRingScalerData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("msuRingScalerData", ::msuRingScalerData::Class_Version(), "/afs/crc.nd.edu/user/s/spectro/evt2root/MSUEvent/msuRingScalerData.h", 9,
                  typeid(::msuRingScalerData), DefineBehavior(ptr, ptr),
                  &::msuRingScalerData::Dictionary, isa_proxy, 0,
                  sizeof(::msuRingScalerData) );
      instance.SetNew(&new_msuRingScalerData);
      instance.SetNewArray(&newArray_msuRingScalerData);
      instance.SetDelete(&delete_msuRingScalerData);
      instance.SetDeleteArray(&deleteArray_msuRingScalerData);
      instance.SetDestructor(&destruct_msuRingScalerData);
      instance.SetStreamerFunc(&streamer_msuRingScalerData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::msuRingScalerData*)
   {
      return GenerateInitInstanceLocal((::msuRingScalerData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::msuRingScalerData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void msuScalerData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_msuScalerData(void *p = 0);
   static void *newArray_msuScalerData(Long_t size, void *p);
   static void delete_msuScalerData(void *p);
   static void deleteArray_msuScalerData(void *p);
   static void destruct_msuScalerData(void *p);
   static void streamer_msuScalerData(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::msuScalerData*)
   {
      ::msuScalerData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::msuScalerData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("msuScalerData", ::msuScalerData::Class_Version(), "/afs/crc.nd.edu/user/s/spectro/evt2root/MSUEvent/msuScalerData.h", 9,
                  typeid(::msuScalerData), DefineBehavior(ptr, ptr),
                  &::msuScalerData::Dictionary, isa_proxy, 0,
                  sizeof(::msuScalerData) );
      instance.SetNew(&new_msuScalerData);
      instance.SetNewArray(&newArray_msuScalerData);
      instance.SetDelete(&delete_msuScalerData);
      instance.SetDeleteArray(&deleteArray_msuScalerData);
      instance.SetDestructor(&destruct_msuScalerData);
      instance.SetStreamerFunc(&streamer_msuScalerData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::msuScalerData*)
   {
      return GenerateInitInstanceLocal((::msuScalerData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::msuScalerData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *msuEventData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *msuEventData::Class_Name()
{
   return "msuEventData";
}

//______________________________________________________________________________
const char *msuEventData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::msuEventData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int msuEventData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::msuEventData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void msuEventData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::msuEventData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *msuEventData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::msuEventData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *msuRingScalerData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *msuRingScalerData::Class_Name()
{
   return "msuRingScalerData";
}

//______________________________________________________________________________
const char *msuRingScalerData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::msuRingScalerData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int msuRingScalerData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::msuRingScalerData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void msuRingScalerData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::msuRingScalerData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *msuRingScalerData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::msuRingScalerData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *msuScalerData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *msuScalerData::Class_Name()
{
   return "msuScalerData";
}

//______________________________________________________________________________
const char *msuScalerData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::msuScalerData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int msuScalerData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::msuScalerData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void msuScalerData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::msuScalerData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *msuScalerData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::msuScalerData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void msuScalerData::Streamer(TBuffer &R__b)
{
   // Stream an object of class msuScalerData.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> scalerTime;
      R__b >> scalerCount;
      R__b.ReadStaticArray((unsigned int*)scalers);
      R__b.CheckByteCount(R__s, R__c, msuScalerData::IsA());
   } else {
      R__c = R__b.WriteVersion(msuScalerData::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << scalerTime;
      R__b << scalerCount;
      R__b.WriteArray(scalers, 32);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void msuScalerData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class msuScalerData.
      TClass *R__cl = ::msuScalerData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scalerTime", &scalerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scalerCount", &scalerCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scalers[32]", scalers);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_msuScalerData(void *p) {
      return  p ? new(p) ::msuScalerData : new ::msuScalerData;
   }
   static void *newArray_msuScalerData(Long_t nElements, void *p) {
      return p ? new(p) ::msuScalerData[nElements] : new ::msuScalerData[nElements];
   }
   // Wrapper around operator delete
   static void delete_msuScalerData(void *p) {
      delete ((::msuScalerData*)p);
   }
   static void deleteArray_msuScalerData(void *p) {
      delete [] ((::msuScalerData*)p);
   }
   static void destruct_msuScalerData(void *p) {
      typedef ::msuScalerData current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_msuScalerData(TBuffer &buf, void *obj) {
      ((::msuScalerData*)obj)->::msuScalerData::Streamer(buf);
   }
} // end of namespace ROOT for class ::msuScalerData

//______________________________________________________________________________
void msuRingScalerData::Streamer(TBuffer &R__b)
{
   // Stream an object of class msuRingScalerData.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> intervalStartOffset;
      R__b >> intervalEndOffset;
      R__b >> timeStamp;
      R__b >> scalerCount;
      R__b.ReadStaticArray((int*)scalers);
      R__b.CheckByteCount(R__s, R__c, msuRingScalerData::IsA());
   } else {
      R__c = R__b.WriteVersion(msuRingScalerData::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << intervalStartOffset;
      R__b << intervalEndOffset;
      R__b << timeStamp;
      R__b << scalerCount;
      R__b.WriteArray(scalers, 330);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void msuRingScalerData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class msuRingScalerData.
      TClass *R__cl = ::msuRingScalerData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intervalStartOffset", &intervalStartOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intervalEndOffset", &intervalEndOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeStamp", &timeStamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scalerCount", &scalerCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scalers[330]", scalers);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_msuRingScalerData(void *p) {
      return  p ? new(p) ::msuRingScalerData : new ::msuRingScalerData;
   }
   static void *newArray_msuRingScalerData(Long_t nElements, void *p) {
      return p ? new(p) ::msuRingScalerData[nElements] : new ::msuRingScalerData[nElements];
   }
   // Wrapper around operator delete
   static void delete_msuRingScalerData(void *p) {
      delete ((::msuRingScalerData*)p);
   }
   static void deleteArray_msuRingScalerData(void *p) {
      delete [] ((::msuRingScalerData*)p);
   }
   static void destruct_msuRingScalerData(void *p) {
      typedef ::msuRingScalerData current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_msuRingScalerData(TBuffer &buf, void *obj) {
      ((::msuRingScalerData*)obj)->::msuRingScalerData::Streamer(buf);
   }
} // end of namespace ROOT for class ::msuRingScalerData

//______________________________________________________________________________
void msuEventData::Streamer(TBuffer &R__b)
{
   // Stream an object of class msuEventData.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((int*)slot14);
      R__b.ReadStaticArray((int*)siDet);
      R__b.CheckByteCount(R__s, R__c, msuEventData::IsA());
   } else {
      R__c = R__b.WriteVersion(msuEventData::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray(slot14, 32);
      R__b.WriteArray(siDet, 29);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void msuEventData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class msuEventData.
      TClass *R__cl = ::msuEventData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "slot14[32]", slot14);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "siDet[29]", siDet);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_msuEventData(void *p) {
      return  p ? new(p) ::msuEventData : new ::msuEventData;
   }
   static void *newArray_msuEventData(Long_t nElements, void *p) {
      return p ? new(p) ::msuEventData[nElements] : new ::msuEventData[nElements];
   }
   // Wrapper around operator delete
   static void delete_msuEventData(void *p) {
      delete ((::msuEventData*)p);
   }
   static void deleteArray_msuEventData(void *p) {
      delete [] ((::msuEventData*)p);
   }
   static void destruct_msuEventData(void *p) {
      typedef ::msuEventData current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_msuEventData(TBuffer &buf, void *obj) {
      ((::msuEventData*)obj)->::msuEventData::Streamer(buf);
   }
} // end of namespace ROOT for class ::msuEventData

/********************************************************
* MSUEventDictionary.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMSUEventDictionary();

extern "C" void G__set_cpp_environmentMSUEventDictionary() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("msuEventData.h");
  G__add_compiledheader("msuRingScalerData.h");
  G__add_compiledheader("msuScalerData.h");
  G__cpp_reset_tagtableMSUEventDictionary();
}
#include <new>
extern "C" int G__cpp_dllrevMSUEventDictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* msuEventData */
static int G__MSUEventDictionary_162_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   msuEventData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new msuEventData[n];
     } else {
       p = new((void*) gvp) msuEventData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new msuEventData;
     } else {
       p = new((void*) gvp) msuEventData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuEventData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_162_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((msuEventData*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_162_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) msuEventData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_162_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) msuEventData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_162_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) msuEventData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_162_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      msuEventData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_162_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((msuEventData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_162_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) msuEventData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_162_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) msuEventData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_162_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) msuEventData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_162_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) msuEventData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MSUEventDictionary_162_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   msuEventData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new msuEventData(*(msuEventData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuEventData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef msuEventData G__TmsuEventData;
static int G__MSUEventDictionary_162_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (msuEventData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((msuEventData*) (soff+(sizeof(msuEventData)*i)))->~G__TmsuEventData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (msuEventData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((msuEventData*) (soff))->~G__TmsuEventData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MSUEventDictionary_162_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   msuEventData* dest = (msuEventData*) G__getstructoffset();
   *dest = *(msuEventData*) libp->para[0].ref;
   const msuEventData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* msuRingScalerData */
static int G__MSUEventDictionary_163_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((msuRingScalerData*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_163_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) msuRingScalerData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_163_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) msuRingScalerData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_163_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) msuRingScalerData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_163_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      msuRingScalerData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_163_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((msuRingScalerData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_163_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) msuRingScalerData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_163_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) msuRingScalerData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_163_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) msuRingScalerData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_163_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) msuRingScalerData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__MSUEventDictionary_163_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   msuRingScalerData *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new msuRingScalerData[n];
     } else {
       p = new((void*) gvp) msuRingScalerData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new msuRingScalerData;
     } else {
       p = new((void*) gvp) msuRingScalerData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuRingScalerData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MSUEventDictionary_163_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   msuRingScalerData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new msuRingScalerData(*(msuRingScalerData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuRingScalerData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef msuRingScalerData G__TmsuRingScalerData;
static int G__MSUEventDictionary_163_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (msuRingScalerData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((msuRingScalerData*) (soff+(sizeof(msuRingScalerData)*i)))->~G__TmsuRingScalerData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (msuRingScalerData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((msuRingScalerData*) (soff))->~G__TmsuRingScalerData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MSUEventDictionary_163_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   msuRingScalerData* dest = (msuRingScalerData*) G__getstructoffset();
   *dest = *(msuRingScalerData*) libp->para[0].ref;
   const msuRingScalerData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* msuScalerData */
static int G__MSUEventDictionary_164_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   msuScalerData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new msuScalerData[n];
     } else {
       p = new((void*) gvp) msuScalerData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new msuScalerData;
     } else {
       p = new((void*) gvp) msuScalerData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuScalerData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_164_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((msuScalerData*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_164_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) msuScalerData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_164_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) msuScalerData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_164_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) msuScalerData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_164_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      msuScalerData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_164_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((msuScalerData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_164_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) msuScalerData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_164_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) msuScalerData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_164_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) msuScalerData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MSUEventDictionary_164_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) msuScalerData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MSUEventDictionary_164_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   msuScalerData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new msuScalerData(*(msuScalerData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuScalerData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef msuScalerData G__TmsuScalerData;
static int G__MSUEventDictionary_164_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (msuScalerData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((msuScalerData*) (soff+(sizeof(msuScalerData)*i)))->~G__TmsuScalerData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (msuScalerData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((msuScalerData*) (soff))->~G__TmsuScalerData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MSUEventDictionary_164_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   msuScalerData* dest = (msuScalerData*) G__getstructoffset();
   *dest = *(msuScalerData*) libp->para[0].ref;
   const msuScalerData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* msuEventData */

/* msuRingScalerData */

/* msuScalerData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMSUEventDictionary {
 public:
  G__Sizep2memfuncMSUEventDictionary(): p(&G__Sizep2memfuncMSUEventDictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMSUEventDictionary::*p)();
};

size_t G__get_sizep2memfuncMSUEventDictionary()
{
  G__Sizep2memfuncMSUEventDictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMSUEventDictionary() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuEventData))) {
     msuEventData *G__Lderived;
     G__Lderived=(msuEventData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuEventData),G__get_linked_tagnum(&G__MSUEventDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuRingScalerData))) {
     msuRingScalerData *G__Lderived;
     G__Lderived=(msuRingScalerData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuRingScalerData),G__get_linked_tagnum(&G__MSUEventDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuScalerData))) {
     msuScalerData *G__Lderived;
     G__Lderived=(msuScalerData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuScalerData),G__get_linked_tagnum(&G__MSUEventDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMSUEventDictionary() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MSUEventDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MSUEventDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MSUEventDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MSUEventDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MSUEventDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MSUEventDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MSUEventDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MSUEventDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MSUEventDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MSUEventDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* msuEventData */
static void G__setup_memvarmsuEventData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuEventData));
   { msuEventData *p; p=(msuEventData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->slot14)-(long)(p)),105,0,0,-1,-1,-1,1,"slot14[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->siDet)-(long)(p)),105,0,0,-1,-1,-1,1,"siDet[29]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MSUEventDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* msuRingScalerData */
static void G__setup_memvarmsuRingScalerData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuRingScalerData));
   { msuRingScalerData *p; p=(msuRingScalerData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->intervalStartOffset)-(long)(p)),105,0,0,-1,-1,-1,1,"intervalStartOffset=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->intervalEndOffset)-(long)(p)),105,0,0,-1,-1,-1,1,"intervalEndOffset=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeStamp)-(long)(p)),108,0,0,-1,G__defined_typename("time_t"),-1,1,"timeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scalerCount)-(long)(p)),105,0,0,-1,-1,-1,1,"scalerCount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scalers)-(long)(p)),105,0,0,-1,-1,-1,1,"scalers[330]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MSUEventDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* msuScalerData */
static void G__setup_memvarmsuScalerData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuScalerData));
   { msuScalerData *p; p=(msuScalerData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->scalerTime)-(long)(p)),104,0,0,-1,-1,-1,1,"scalerTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scalerCount)-(long)(p)),105,0,0,-1,-1,-1,1,"scalerCount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scalers)-(long)(p)),104,0,0,-1,-1,-1,1,"scalers[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MSUEventDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMSUEventDictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncmsuEventData(void) {
   /* msuEventData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuEventData));
   G__memfunc_setup("msuEventData",1233,G__MSUEventDictionary_162_0_1, 105, G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuEventData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__MSUEventDictionary_162_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MSUEventDictionary_162_0_3, 85, G__get_linked_tagnum(&G__MSUEventDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&msuEventData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MSUEventDictionary_162_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&msuEventData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MSUEventDictionary_162_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&msuEventData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MSUEventDictionary_162_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&msuEventData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MSUEventDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MSUEventDictionary_162_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MSUEventDictionary_162_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&msuEventData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MSUEventDictionary_162_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&msuEventData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MSUEventDictionary_162_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&msuEventData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MSUEventDictionary_162_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&msuEventData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("msuEventData", 1233, G__MSUEventDictionary_162_0_15, (int) ('i'), G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuEventData), -1, 0, 1, 1, 1, 0, "u 'msuEventData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~msuEventData", 1359, G__MSUEventDictionary_162_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MSUEventDictionary_162_0_17, (int) ('u'), G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuEventData), -1, 1, 1, 1, 1, 0, "u 'msuEventData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmsuRingScalerData(void) {
   /* msuRingScalerData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuRingScalerData));
   G__memfunc_setup("Clear",487,G__MSUEventDictionary_163_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MSUEventDictionary_163_0_2, 85, G__get_linked_tagnum(&G__MSUEventDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&msuRingScalerData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MSUEventDictionary_163_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&msuRingScalerData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MSUEventDictionary_163_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&msuRingScalerData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MSUEventDictionary_163_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&msuRingScalerData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MSUEventDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MSUEventDictionary_163_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MSUEventDictionary_163_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&msuRingScalerData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MSUEventDictionary_163_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&msuRingScalerData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MSUEventDictionary_163_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&msuRingScalerData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MSUEventDictionary_163_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&msuRingScalerData::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("msuRingScalerData", 1721, G__MSUEventDictionary_163_0_14, (int) ('i'), G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuRingScalerData), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("msuRingScalerData", 1721, G__MSUEventDictionary_163_0_15, (int) ('i'), G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuRingScalerData), -1, 0, 1, 1, 1, 0, "u 'msuRingScalerData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~msuRingScalerData", 1847, G__MSUEventDictionary_163_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MSUEventDictionary_163_0_17, (int) ('u'), G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuRingScalerData), -1, 1, 1, 1, 1, 0, "u 'msuRingScalerData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmsuScalerData(void) {
   /* msuScalerData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuScalerData));
   G__memfunc_setup("msuScalerData",1321,G__MSUEventDictionary_164_0_1, 105, G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuScalerData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__MSUEventDictionary_164_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MSUEventDictionary_164_0_3, 85, G__get_linked_tagnum(&G__MSUEventDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&msuScalerData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MSUEventDictionary_164_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&msuScalerData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MSUEventDictionary_164_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&msuScalerData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MSUEventDictionary_164_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&msuScalerData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MSUEventDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MSUEventDictionary_164_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MSUEventDictionary_164_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&msuScalerData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MSUEventDictionary_164_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&msuScalerData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MSUEventDictionary_164_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&msuScalerData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MSUEventDictionary_164_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&msuScalerData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("msuScalerData", 1321, G__MSUEventDictionary_164_0_15, (int) ('i'), G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuScalerData), -1, 0, 1, 1, 1, 0, "u 'msuScalerData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~msuScalerData", 1447, G__MSUEventDictionary_164_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MSUEventDictionary_164_0_17, (int) ('u'), G__get_linked_tagnum(&G__MSUEventDictionaryLN_msuScalerData), -1, 1, 1, 1, 1, 0, "u 'msuScalerData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMSUEventDictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMSUEventDictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMSUEventDictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MSUEventDictionaryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MSUEventDictionaryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MSUEventDictionaryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MSUEventDictionaryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MSUEventDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MSUEventDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MSUEventDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MSUEventDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MSUEventDictionaryLN_msuEventData = { "msuEventData" , 99 , -1 };
G__linked_taginfo G__MSUEventDictionaryLN_msuRingScalerData = { "msuRingScalerData" , 99 , -1 };
G__linked_taginfo G__MSUEventDictionaryLN_msuScalerData = { "msuScalerData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMSUEventDictionary() {
  G__MSUEventDictionaryLN_TClass.tagnum = -1 ;
  G__MSUEventDictionaryLN_TBuffer.tagnum = -1 ;
  G__MSUEventDictionaryLN_TMemberInspector.tagnum = -1 ;
  G__MSUEventDictionaryLN_TObject.tagnum = -1 ;
  G__MSUEventDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MSUEventDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MSUEventDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MSUEventDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MSUEventDictionaryLN_msuEventData.tagnum = -1 ;
  G__MSUEventDictionaryLN_msuRingScalerData.tagnum = -1 ;
  G__MSUEventDictionaryLN_msuScalerData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMSUEventDictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MSUEventDictionaryLN_TClass);
   G__get_linked_tagnum_fwd(&G__MSUEventDictionaryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MSUEventDictionaryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MSUEventDictionaryLN_TObject);
   G__get_linked_tagnum_fwd(&G__MSUEventDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MSUEventDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MSUEventDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MSUEventDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MSUEventDictionaryLN_msuEventData),sizeof(msuEventData),-1,28928,(char*)NULL,G__setup_memvarmsuEventData,G__setup_memfuncmsuEventData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MSUEventDictionaryLN_msuRingScalerData),sizeof(msuRingScalerData),-1,28672,(char*)NULL,G__setup_memvarmsuRingScalerData,G__setup_memfuncmsuRingScalerData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MSUEventDictionaryLN_msuScalerData),sizeof(msuScalerData),-1,28928,(char*)NULL,G__setup_memvarmsuScalerData,G__setup_memfuncmsuScalerData);
}
extern "C" void G__cpp_setupMSUEventDictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupMSUEventDictionary()");
  G__set_cpp_environmentMSUEventDictionary();
  G__cpp_setup_tagtableMSUEventDictionary();

  G__cpp_setup_inheritanceMSUEventDictionary();

  G__cpp_setup_typetableMSUEventDictionary();

  G__cpp_setup_memvarMSUEventDictionary();

  G__cpp_setup_memfuncMSUEventDictionary();
  G__cpp_setup_globalMSUEventDictionary();
  G__cpp_setup_funcMSUEventDictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMSUEventDictionary();
  return;
}
class G__cpp_setup_initMSUEventDictionary {
  public:
    G__cpp_setup_initMSUEventDictionary() { G__add_setup_func("MSUEventDictionary",(G__incsetup)(&G__cpp_setupMSUEventDictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMSUEventDictionary() { G__remove_setup_func("MSUEventDictionary"); }
};
G__cpp_setup_initMSUEventDictionary G__cpp_setup_initializerMSUEventDictionary;

